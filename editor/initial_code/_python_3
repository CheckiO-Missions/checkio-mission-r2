def riichi_mahjong_win_hand(hand: list, open_sets: list) -> bool:
    # your code here
    return True


print("Example:")
print(riichi_mahjong_win_hand(['m1', 'm2', 'm3', 'm5', 'm5', 'p2', 'p3', 'p4', 'p7', 'p8', 'p9', 's4', 's5', 's6'], []))

# These "asserts" are used for self-checking and not for an auto-testing
assert riichi_mahjong_win_hand(['p3', 'p4', 'p1', 'p1', 'p1'], []) == False, 'Incorrect number of arguments'
assert riichi_mahjong_win_hand(['s5', 's3', 's4', 's8', 's4', 's2', 's4', 's5', 's9', 's6', 's1', 's6', 's6', 's7'], []) == True, 'No, this is right hand!'
assert riichi_mahjong_win_hand(['s9', 'm6', 'm8', 'dw', 'm9', 'p1', 's9', 'p7', 'p9', 'dw', 'p8', 's9', 'p1', 'p1'], []) == False, 'There mustn't be alone tiles!'
assert riichi_mahjong_win_hand(['p9', 'dw', 'm9', 'p1', 'p1', 'p8', 'p1', 'dw', 'm7', 'p7', 'm8'], ['s999']) == True, 'Right hand'
assert riichi_mahjong_win_hand(['p8', 'm9', 'p9', 'm8', 'm6', 'p1', 'p1', 'p1', 'p7'], ['s999', 'dww']) == False, 'Pair can't be open'
assert riichi_mahjong_win_hand(['s3', 'p1', 'm2', 'm2', 'p5', 'ww', 'p1', 'm6', 'p5', 's3', 'm6', 's9', 's9', 'ww'], []) == True, 'Yes, this is chitoisu!'

print("Now, what about 'Check solution'?")
